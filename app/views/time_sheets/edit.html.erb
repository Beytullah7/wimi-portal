<%- model_class = TimeSheet -%>
<div class="col-md-12 col-sm-12">
  <div class="display">
    <div class="page-header">
      <div class="h1">
        <% month_name = l(@time_sheet.first_day, format: :short_month_year) %>
        <%= t('helpers.titles.edit', model: model_class.model_name.human.titleize + ' ' + month_name) %>
      </div>
    </div>

    <%= form_for @time_sheet, html: {class: 'time_sheet_form'} do |f| %>
      <%= render partial: "shared/form_validation_errors", locals: {object: @time_sheet} %>

      <p>
        <strong><%= t('time_sheet.month_year')%>:</strong>
        <%= l f.object.first_day , format: :without_day %>
        <%= f.number_field :month, class: 'hidden'%>
        <%= f.number_field :year, class: 'hidden'%>
      </p>

      <div class="row">
        <div class="col-md-12">
          <table class="table table-hover arrow-nav">
            <tr>
              <th colspan="2" class="col-xs-1"><%= t('activerecord.attributes.work_day.date') %></th>
              <th class="col-xs-1"><%= t('activerecord.attributes.work_day.start_time') %></th>
              <th class="col-xs-1" style="max-width: 30px;"><%= t('activerecord.attributes.work_day.break') %></th>
              <th class="col-xs-1"><%= t('activerecord.attributes.work_day.end_time') %></th>
              <th class="col-xs-4"><%= t('activerecord.attributes.work_day.notes') %></th>
              <th class="col-xs-2"><%= t('activerecord.attributes.work_day.project') %></th>
              <th class="col-xs-1"><%= t('activerecord.attributes.work_day.attendance') %></th>
            </tr>
            <%= f.fields_for :work_days, @time_sheet.work_days.to_a.sort! {|a,b| a.date <=> b.date } do |t| %>
              <tr class="work_day_tr">
                <td>
                  <span class="helper-btns hidden-xs">
                    <button type="button" class="btn btn-danger btn-xs clear" title="Clear work day">
                      <i class="fa fa-times" aria-hidden="true"></i>
                    </button>
                    <button type="button" class="btn btn-warning btn-xs duplicate" title="Copy entry to next work day">
                      <i class="fa fa-files-o" aria-hidden="true"></i>
                    </button>
                  </span>
                  <%= l t.object.date, format: :weekday_short %>
                </td>
                <td>
                  <%= t.date_field :date, readonly: true, class: 'hidden'%>
                  <%= l t.object.date, format: :day_month %>
                </td>
                <td <%= 'class=has-error' if (t.object.errors[:start_time].any? or t.object.errors[:duration].any?) %>>
                  <%= t.text_field :start_time , value: t.object.start_time ? l(t.object.start_time, format: :hours_minutes) : "", size: 5, maxlength: 5, placeholder: "00:00" %>
                  <%= content_tag :span, t.object.errors[:start_time].concat(t.object.errors[:duration]).join(', '), :class => "help-block" if t.object.errors[:duration].any? %>
                </td>
                <td <%= 'class=has-error' if t.object.errors[:break].any? %>>
                  <%= t.text_field :break , size: 4, maxlength: 4, placeholder: "0"  %>
                  <%= content_tag :span, t.object.errors[:break].join(', '), :class => "help-block" if t.object.errors[:break].any? %>
                </td>
                <td <%= 'class=has-error' if t.object.errors[:end_time].any? %>>
                  <%= t.text_field :end_time , value: t.object.end_time ? l(t.object.end_time, format: :hours_minutes) : "", size: 5, maxlength: 5, placeholder: "00:00" %>
                  <%= content_tag :span, t.object.errors[:end_time].join(', '), :class => "help-block" if t.object.errors[:end_time].any? %>
                </td>
                <td>
                  <%= t.text_area :notes,
                    rows: 1,
                    class: 'form-control',
                    :data => {"enable-autosize" => true},
                    placeholder: t('.note_placeholder'),
                    style: 'max-height: 10em; min-width: 100px; max-width: 300px;'  %>
                </td>
                <td <%= 'class=has-error' if t.object.errors[:project_id].any? %>>
                  <%= t.select(:project_id, @projects.collect {|p| [p.title,p.id]}, {}, { :class => 'form-control'}) %>
                  <%= content_tag :span, t.object.errors[:project_id].join(', '), :class => "help-block" if t.object.errors[:project_id].any? %>
                </td>
                <td>
                  <%= t.select(:status, [["",""], [t('activerecord.attributes.work_day.attendance_options.sick'), 'K'], [t('activerecord.attributes.work_day.attendance_options.holiday'), 'F']], {}, {class: 'form-control'}) %>
                </td>
              </tr>
            <% end %>
          </table>
        </div>
      </div>

      <%# Allow to submit the form without JS for testing and via label in sidebar %>
      <%= f.submit nil, id: "hiddensubmit", class:'hidden' %>
    <% end %>

  </div>
</div>

<% content_for :actions do %>
  <% model_name = model_class.model_name.human.titleize %>
  <%# Label that triggers the 'hiddensubmit' submit button when clicked.
      Allows submitting the form with an element not inside the form element %>
  <%= label_tag 'hiddensubmit',
    t('helpers.submit.update', model: model_name),
    class: 'btn btn-block btn-success' %>
  <hr>
  <%= delete_button @time_sheet, class: 'btn-block', confirm: t('time_sheet.delete'), id: "delete" %>
  <%= link_to t('helpers.links.cancel'), time_sheet_path(@time_sheet), class: 'btn btn-block btn-default' %>
<% end %>


<script>
  $( document ).ready(function() {
    function getRowInputs($row) {
      return $row.find('input:not([type=hidden]), textarea').not('.hidden');
    }

    function getRowSelects($row) {
      return $row.find('select');
    }

    function clearRow($row) {
      var inputs = getRowInputs($row);
      var selects = getRowSelects($row);
      inputs.val('');
      // trigger autosize JQuery plugin to adapt to new content
      inputs.trigger('autosize.resize');
      selects.prop('selectedIndex', 0);
    }

    $('.clear').click(function(){
      var tr = $(this).closest('tr');
      clearRow(tr);
    });

    $('.duplicate').click(function(){
      var current_tr = $(this).closest('tr');
      var current_inputs = getRowInputs(current_tr);
      var current_selects = getRowSelects(current_tr);
      // .next() returns a hidden input (of the nested form)
      var next_tr = current_tr.nextAll('tr').first();
      var next_inputs = getRowInputs(next_tr);
      var next_selects = getRowSelects(next_tr);

      current_inputs.each(function(i) {
        var input = next_inputs.eq(i);
        input.val($(this).val());
        // trigger autosize JQuery plugin to adapt to new content
        input.trigger('autosize.resize');
      });
      current_selects.each(function(i) {
        // var current_option = $(this).find('option:selected').index();
        var current_opt = $(this).prop('selectedIndex');
        next_selects.eq(i).prop('selectedIndex', current_opt);
      });
    });

    /* https://gist.github.com/krcourville/7309218 */
    $('table.arrow-nav').keydown(function(e){
        var $active = $('input[type=text]:focus', $(this));
        var $next = null;
        var focusableQuery = 'input[type=text]:visible';
        var position = parseInt( $active.closest('td').index() ) + 1;
        switch(e.keyCode){
            case 38: // <Up>
                $next = $active
                    .closest('tr')
                    .prev()
                    .find('td:nth-child(' + position + ')')
                    .find(focusableQuery);
                break;
            case 40: // <Down>
                $next = $active
                    .closest('tr')
                    .next()
                    .find('td:nth-child(' + position + ')')
                    .find(focusableQuery);
                break;
        }
        if ($next && $next.length) { $next.focus(); }
    });

  });
</script>
